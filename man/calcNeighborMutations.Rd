\name{calcNeighborMutations}
\alias{calcNeighborMutations}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
Function to calculate surrogate mutations given DNA
}
\description{
Given a GISTIC file and a Mutation Annotation Format (MAF) file and a set of surrogate genes in question, generate a p-value for each surrogate mutation per sample using permutation analysis.
}
\usage{
calcNeighborMutations(intome, nodeset = NULL, gisticCopyCalls, nodeMappedDream, Samples = NULL, cores = NULL, prefix = "", numPermutes = 10000, geneIntTable = geneIntTable)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{intome}{Protein/protein interactome file, derived from HPRD and available in the DLBCL package.
}
  \item{nodeset}{
    Surrogate Gene set of interest. Note these must be mapped to NodeName in intome. This can be done by matching Gene Symbol or Entrez ID to the geneIntTable generated by the buildGeneIntTable() function.
}
  \item{gisticCopyCalls}{
    GISTIC gene level copy number calls mapped to Nodes in network.  Row names are genes, and Column names are samples. Please refer to the included vignette for an example of the transformed file.
}
  \item{nodeMappedMAF}{
    MAF file mapped to Nodes in network. Please refer to the included vignette for an example of the mapped file.
}
  \item{Samples}{
    Optional vector consisting of the samples of interest to run. If this is option is set to NULL, then all samples that exist in gisticCopyCalls and nodeMappedMAF will be run.
}
  \item{cores}{
  If set to NULL, then will run on a single core machine. If set to an integer, will attempt to run the permutation analysis on multiple cores. Note that this requires the foreach and doMC packages to run.
}
  \item{prefix}{
  Prefix for files generated by analysis. Note that for each sample, three files will be generated: a (prefix-sample)-pvalue-results.txt file, a (prefix-sample)-copyNumberAndMutations.txt file, and a (prefix-sample)permute-test-(numMutations).txt file.
}
  \item{numPermutes}{
  Number of mutations to run. Currently the default is set to 10000.
}
  \item{geneIntTable}{
  Gene Node mapping table generated for intome object by buildGeneIntTable().
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{ A list object with the following Slots:

\item{cellResults}{A list where each slot consists of a data frame for each sample with the following columns: ghe "isMutated" column reports whether the surrogate gene itself is mutated or not. The "degree" column gives the total number of connection that surrogate gene has. The "neighborVec" column contains the number of neighboring mutations observed for that surrogate gene. Note that in this count, we include the surrogate gene if it is mutated. The "pvalue" column gives the p-value given the permutation analysis. Note that the smallest p-value is limited by the number of mutations (i.e., for 10000 mutations, the smallest p-value available is 10000^-1 = 1e-4) }
\item{mutCopyFrames}{A list where each slot consists of a data frame containing information about observed mutations. The columns are "NodeName" (Node in network), "copy" (Number of copy number alterations observed in sample for that gene), "mutations" (number of mutations observed in that gene), "combined" (these two columns added together), "Gene" (Gene Symbol), "EntrezID", and "copyStatus" (whether the gene is called as amplified (1), neutral (0), or deleted (-1)).}
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
Ted Laderas
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

Please refer to the vignette for a complete example of how to run calcNeighborMutations.

}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
